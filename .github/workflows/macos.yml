name: MacOS CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  macos-compile:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install cliclick
      run:  brew install cliclick

    - name: install deps
      run:  brew install autoconf automake libtool

    - name: test java1
      run:  |
            type java
            java -version || exit 0
            /usr/libexec/java_home -V
            /usr/libexec/java_home -v 11
            export JAVA_HOME=$(/usr/libexec/java_home -v11)
            java -version
            $JAVA_HOME/bin/java -version
            $JAVA_HOME/bin/javac -version

    - name: install java
      run:  brew install java

    - name: test java2
      run:  |
            type java
            java -version || exit 1

    - name: test java3
      run:  |
            type javac
            javac -version || exit 1

    - name: macos-version1
      run: sw_vers -productVersion

    - name: macos-version2
      run: system_profiler SPSoftwareDataType

    - name: compile
      run: |
           pwd
           ls -al /Users/runner/
           _HOME_="/Users/runner/"
           cliclick -m verbose m:12,34
           screencapture -T 42 -x -t png /Users/runner/screen01.png &
           screencapture -T 43 -x -t png /Users/runner/screen02.png &
           screencapture -T 43 -x -t png /Users/runner/screen03.png &
           screencapture -T 44 -x -t png /Users/runner/screen04.png &
           screencapture -T 45 -x -t png /Users/runner/screen05.png &
           screencapture -T 120 -x -t png /Users/runner/screen06.png &
           screencapture -T 240 -x -t png /Users/runner/screen07.png &
           export _HOME_
           cd "$_HOME_"
           cd "$_SRC_"
           /Users/runner/work/java_toxclient_example/java_toxclient_example/circle_scripts/deps_macos.sh
           /Users/runner/work/java_toxclient_example/java_toxclient_example/circle_scripts/java_jni_lib_macos.sh

    - name: upload screenshots
      uses: actions/upload-artifact@v2
      with:
        name: macscreen
        path: |
          /Users/runner/screen*.png

    - name: upload artefacts
      uses: actions/upload-artifact@v2
      with:
        name: libs
        path: /Users/runner/work/artefacts/*


  windows-compile:
    runs-on: windows-latest
    steps:
      - name: Display the path
        run: echo %PATH%
        shell: cmd

      - name: java version
        run: set -x ; "$JAVA_HOME_11_X64/bin/java.exe" -version
        shell: bash

  test:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: install trifa latest release
        shell: bash
        run: |
             id;pwd;ls
             curl -L https://github.com/zoff99/java_toxclient_example/releases/latest/download/trifa_desktop.zip -o trifa_desktop.zip
             ls -al trifa_desktop.zip
             id;pwd;ls

      - name: unzip
        shell: bash
        run: |
             id;pwd
             unzip trifa_desktop.zip

      - name: run
        shell: bash
        run: |
             id;pwd
             brew install cliclick
             cliclick -m verbose m:12,34
             /usr/libexec/java_home -v 11
             export JAVA_HOME=$(/usr/libexec/java_home -v11)
             $JAVA_HOME/bin/java  -Djava.library.path="." -classpath ".:sqlite-jdbc-3.32.3.2.jar:webcam-capture-0.3.12.jar:bridj-0.7.0.jar:slf4j-api-1.7.2.jar:flatlaf-1.0.jar" com.zoffcc.applications.trifa.MainActivity > trifa.log 2>&1 &
             sleep 40
             cat ./trifa.log|head -20
             cat ./trifa.log | grep 'MyToxID:' | cut -d':' -f 8
             mkdir -p /Users/runner/work/artefacts
             screencapture -T 1 -x -t png /Users/runner/work/artefacts/screen_macos.png
        if: matrix.runs-on == 'macos-latest'

      - name: pre run
        shell: bash
        run: |
             id;pwd
             sudo apt-get update > /dev/null 2>&1
             sudo apt-get install -qq -y --force-yes openjdk-11-jre-headless x11-apps imagemagick > /dev/null 2>&1
             sudo mkdir -p /Users/runner/work/artefacts
             sudo chmod a+rwx /Users/runner/work/artefacts
        if: matrix.runs-on == 'ubuntu-latest'

      - name: run
        shell: bash
        run: |
             id;pwd
             /usr/bin/xvfb-run --auto-servernum --server-args='-screen 0 1920x1200x24' /usr/lib/jvm/java-11-openjdk-amd64/bin/java -Djava.library.path="." -classpath ".:sqlite-jdbc-3.32.3.2.jar:webcam-capture-0.3.12.jar:bridj-0.7.0.jar:slf4j-api-1.7.2.jar:flatlaf-1.0.jar" com.zoffcc.applications.trifa.MainActivity > trifa.log 2>&1 &
             sleep 1 ;
             ps -auxww ;
             sleep 10 ;
             DISPLAY=:99 xwd -root -silent | convert xwd:- png:/Users/runner/work/artefacts/screen_linux_002.png || exit 0
        if: matrix.runs-on == 'ubuntu-latest'

      - name: post run
        shell: bash
        run: |
             id;pwd
             sleep 10
             cat ./trifa.log|head -120
             cat ./trifa.log | grep 'MyToxID:' || exit 0
        if: matrix.runs-on == 'ubuntu-latest'

      - name: run
        shell: bash
        run: |
             id;pwd
             "$JAVA_HOME_11_X64/bin/java.exe" -version
        if: matrix.runs-on == 'windows-latest'

      - name: upload artefacts
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: /Users/runner/work/artefacts/*.png








